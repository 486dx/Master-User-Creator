<File version="3.1">
  <FileID>647ac33b-2f6c-4506-b5b1-339af0d70851</FileID>
  <Preview>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</Preview>
  <Form>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</Form>
  <Code><![CDATA[

function Set-DarkMode
{
	$formOptions.BackColor = "44,44,44"
	$tabpageGeneral.BackColor = "44,44,44"
	$tabpageGeneral.ForeColor = 'White'
	$groupboxFormSettings.BackColor = "44,44,44"
	$groupboxFormSettings.ForeColor = 'White'
	$groupboxUserSettings.BackColor = "44,44,44"
	$groupboxUserSettings.ForeColor = 'White'
	$groupboxO365Settings.BackColor = "44,44,44"
	$groupboxO365Settings.ForeColor = 'White'
	$textboxUserFormatDisplayName.BackColor = "35,35,35"
	$textboxUserFormatDisplayName.ForeColor = 'White'
	$textboxUserFormatEmail.BackColor = "35,35,35"
	$textboxUserFormatEmail.ForeColor = 'White'
	$textboxUserFormatSamAccountName.BackColor = "35,35,35"
	$textboxUserFormatSamAccountName.ForeColor = 'White'
	$textboxUserFormatUserPrincipalName.BackColor = "35,35,35"
	$textboxUserFormatUserPrincipalName.ForeColor = 'White'
	$buttonOK.BackColor = "35,35,35"
	$buttonOK.ForeColor = 'White'
	
	$linklabelUserFormats.linkColor = 'DeepSkyBlue'
	
	
	$tabpageADTitleCase.BackColor = "44,44,44"
	$tabpageADTitleCase.ForeColor = 'white'
	$groupboxgeneral.ForeColor = 'White'
	$groupboxgeneral.BackColor = "44,44,44"
	$groupboxADTitleCase.ForeColor = 'White'
	$groupboxADTitleCase.BackColor = "44,44,44"
	$groupboxAccount.BackColor = "44,44,44"
	$groupboxAccount.ForeColor = 'White'
	$groupboxAddress.BackColor = "44,44,44"
	$groupboxAddress.ForeColor = 'White'
	$groupboxOrganization.BackColor = "44,44,44"
	$groupboxOrganization.ForeColor = 'White'
	
	$tabpageO365TitleCase.BackColor = "44,44,44"
	$tabpageO365TitleCase.ForeColor = 'White'
	$groupboxO365TitleCase.BackColor = "44,44,44"
	$groupboxO365TitleCase.ForeColor = 'White'
	$groupboxO365General.BackColor = "44,44,44"
	$groupboxO365General.ForeColor = 'White'
	$groupboxO365Account.BackColor = "44,44,44"
	$groupboxO365Account.ForeColor = 'White'
	$groupboxO365Address.BackColor = "44,44,44"
	$groupboxO365Address.ForeColor = 'White'
	
	$comboboxExchangeSetup.FlatStyle = 'Flat'
	$comboboxExchangeSetup.BackColor = "35,35,35"
	$comboboxExchangeSetup.ForeColor = 'White'
	
	$comboboxDefaultCountryCode.FlatStyle = 'Flat'
	$comboboxDefaultCountryCode.BackColor = "35,35,35"
	$comboboxDefaultCountryCode.ForeColor = 'White'
	
	$textboxO365DisplayNameFormat.ForeColor = 'White'
	$textboxO365DisplayNameFormat.BackColor = "35,35,35"
	$textboxO365UPNFormat.ForeColor = 'White'
	$textboxO365UPNFormat.BackColor = "35,35,35"
	$linklabelO365UserFormats.linkColor = 'DeepSkyBlue'
	
	$textboxO365FormatEmail.BackColor = '35,35,35'
	$textboxO365FormatEmail.ForeColor = "White"
	
}

function Set-LightMode
{
	
	$linklabelUserFormats.linkColor = '0, 0, 255'
	
	$formOptions.BackColor = "WhiteSmoke"
	$tabpageGeneral.BackColor = "WhiteSmoke"
	$tabpageGeneral.ForeColor = 'Black'
	$groupboxFormSettings.BackColor = "White"
	$groupboxFormSettings.ForeColor = 'Black'
	$groupboxUserSettings.BackColor = "White"
	$groupboxUserSettings.ForeColor = 'Black'
	$groupboxO365Settings.BackColor = "White"
	$groupboxO365Settings.ForeColor = 'Black'
	$textboxUserFormatDisplayName.BackColor = "White"
	$textboxUserFormatDisplayName.ForeColor = 'Black'
	$textboxUserFormatEmail.BackColor = "White"
	$textboxUserFormatEmail.ForeColor = 'Black'
	$textboxUserFormatSamAccountName.BackColor = "White"
	$textboxUserFormatSamAccountName.ForeColor = 'Black'
	$textboxUserFormatUserPrincipalName.BackColor = "White"
	$textboxUserFormatUserPrincipalName.ForeColor = 'Black'
	$tabpageGeneral.BackColor = 'White'
	$buttonOK.BackColor = "White"
	$buttonOK.ForeColor = 'Black'
	
	
	$tabpageADTitleCase.BackColor = "White"
	$tabpageADTitleCase.ForeColor = 'Black'
	$groupboxgeneral.ForeColor = 'Black'
	$groupboxgeneral.BackColor = "White"
	$groupboxADTitleCase.ForeColor = 'Black'
	$groupboxADTitleCase.BackColor = "White"
	$groupboxAccount.BackColor = "White"
	$groupboxAccount.ForeColor = 'Black'
	$groupboxAddress.BackColor = "White"
	$groupboxAddress.ForeColor = 'Black'
	$groupboxOrganization.BackColor = "White"
	$groupboxOrganization.ForeColor = 'Black'
	
	$tabpageO365TitleCase.BackColor = "White"
	$tabpageO365TitleCase.ForeColor = 'Black'
	$groupboxO365TitleCase.BackColor = "White"
	$groupboxO365TitleCase.ForeColor = 'Black'
	$groupboxO365General.BackColor = "White"
	$groupboxO365General.ForeColor = 'Black'
	$groupboxO365Account.BackColor = "White"
	$groupboxO365Account.ForeColor = 'Black'
	$groupboxO365Address.BackColor = "White"
	$groupboxO365Address.ForeColor = 'Black'
	
	$comboboxDefaultCountryCode.FlatStyle = 'Standard'
	$comboboxDefaultCountryCode.BackColor = "White"
	$comboboxDefaultCountryCode.ForeColor = 'Black'
	
	$comboboxExchangeSetup.FlatStyle = 'Standard'
	$comboboxExchangeSetup.BackColor = "White"
	$comboboxExchangeSetup.ForeColor = 'Black'
	
	$textboxO365DisplayNameFormat.ForeColor = 'Black'
	$textboxO365DisplayNameFormat.BackColor = "White"
	$textboxO365UPNFormat.ForeColor = 'Black'
	$textboxO365UPNFormat.BackColor = "White"
	$linklabelO365UserFormats.linkColor = '0, 0, 255'
	
	$textboxO365FormatEmail.BackColor = 'White'
	$textboxO365FormatEmail.ForeColor = "Black"
}
$formOptions_Load = {
	#Exchange 
	
	$RemoteFWDINGDomain = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ExchangeRemoteDomain -ErrorAction SilentlyContinue).ExchangeRemoteDomain
	$textboxRemoteFWDDomain.Text = $RemoteFWDINGDomain
	
	$ADSyncServer = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ADSyncServer -ErrorAction SilentlyContinue).ADSyncServer
	$textboxADSyncServer.Text = $ADSyncServer
	
	$ExchangeSetup = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ExchangeSetup -ErrorAction SilentlyContinue).ExchangeSetup
	If ($null -eq $ExchangeSetup)
	{
		$comboboxExchangeSetup.SelectedItem = "Other"
	}
	Else
	{
		$comboboxExchangeSetup.SelectedItem = $ExchangeSetup
		
	}
	$ExchangeURL = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ExchangeURL -ErrorAction SilentlyContinue).ExchangeURL
	
	$textboxexchangeserverURL.Text = $ExchangeURL
	
	
	$ExchangeWhere = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ExchangeWhere -ErrorAction SilentlyContinue).ExchangeWhere
	If ($ExchangeWhere -eq "Remote")
	{
		$radiobuttonRemote.Checked = $true
	}
	Elseif($radiobuttonLocal.Checked -eq $true)
	{
		$radiobuttonLocal.Checked = $true
		
	}
	Else
	{
		#Do Nothing
	}
	
	
	
	#CountryCode
	$CountryCode = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name CountryCode -ErrorAction SilentlyContinue).CountryCode
	If ($null -eq $CountryCode)
	{
		$comboboxDefaultCountryCode.SelectedItem = "US"
	}
	Else
	{ $comboboxDefaultCountryCode.SelectedItem = $CountryCode
		
	}
	$MFALogin = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name MFALogin -ErrorAction SilentlyContinue).MFALogin
	If ($MFALogin -eq 1)
	{
		$radiobuttonMultiFactorLogin.Checked = $true
	}
	Else
	{
		$radiobuttonNonMFALogin.Checked = $true
	}
	
	$AlwaysADCreate = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysADCreate -ErrorAction SilentlyContinue).AlwaysADCreate
	If ($AlwaysADCreate -eq 1)
	{
		$checkboxEnable.Checked = $true
	}
	
	$AlwaysO365Create = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name AlwaysO365Create -ErrorAction SilentlyContinue).AlwaysO365Create
	If ($AlwaysO365Create -eq 1)
	{
		$checkboxCheckboxAlwaysO365.Checked = $true
	}
	
	$DarkMode = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name DarkMode -ErrorAction SilentlyContinue).DarkMode
	If ($DarkMode -eq 1)
	{
		Set-DarkMode
		$checkboxDarkMode.Checked = $true
	}
	Else
	{
		Set-LightMode
		$checkboxDarkMode.Checked = $false
	}
	
	
	##############
	$PasswordSettings = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name PasswordGen -ErrorAction SilentlyContinue).PasswordGen
	If ($PasswordSettings -eq 0)
	{
		$radiobuttonPronounceablePasswor.Checked = $true
	}
	Else
	{
		$radiobuttonRandomCharacterPassw.Checked = $true
	}
	$ADTitleCase = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADTitleCase -ErrorAction SilentlyContinue).ADTitleCase
	If ($ADTitleCase -eq 1)
	{
		$checkboxADTitleCase.Checked = $true
	}
	Else
	{
		$checkboxSelectAll.Enabled = $false
		$checkboxADTitleCase.Checked = $false
		
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	$O365TitleCase = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365TitleCase -ErrorAction SilentlyContinue).O365TitleCase
	If ($O365TitleCase -eq 1)
	{
		$checkboxO365TitleCase.Checked = $true
	}
	Else
	{
		$checkboxO365SelectAll.Enabled = $false
		$checkboxO365TitleCase.Checked = $false
		
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	
	$ADFirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADFirstName -ErrorAction SilentlyContinue).ADFirstName
	If ($ADFirstName -eq 1)
	{
		$checkboxfirstname.Checked = $true
	}
	Else
	{
		$checkboxfirstname.Checked = $false
	}
	#Initials
	$ADFirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADInitials -ErrorAction SilentlyContinue).ADInitials
	If ($ADFirstName -eq 1)
	{
		$checkboxinitial.Checked = $true
	}
	Else
	{
		$checkboxinitial.Checked = $false
	}
	#LastName
	$ADLastName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADLastName -ErrorAction SilentlyContinue).ADLastName
	If ($ADLastName -eq 1)
	{
		$checkboxlastname.Checked = $true
	}
	Else
	{
		$checkboxlastname.Checked = $false
	}
	#DisplayName
	$ADDisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDisplayName -ErrorAction SilentlyContinue).ADDisplayName
	If ($ADDisplayName -eq 1)
	{
		$checkboxdisplayname.Checked = $true
	}
	Else
	{
		$checkboxdisplayname.Checked = $false
	}
	#Description
	$ADDescription = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription
	If ($ADDescription -eq 1)
	{
		$checkboxdescription.Checked = $true
	}
	Else
	{
		$checkboxdescription.Checked = $false
	}
	#UserPrincipalName
	$ADUPN = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADUPN -ErrorAction SilentlyContinue).ADUPN
	If ($ADUPN -eq 1)
	{
		$checkboxupn.Checked = $true
	}
	Else
	{
		$checkboxupn.Checked = $false
	}
	#Office
	$ADOffice = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice
	If ($ADOffice -eq 1)
	{
		$checkboxoffice.Checked = $true
	}
	Else
	{
		$checkboxoffice.Checked = $false
	}
	#SamAccountName
	$ADSamAccountName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADSamAccountName -ErrorAction SilentlyContinue).ADSamAccountName
	If ($ADSamAccountName -eq 1)
	{
		$checkboxsamaccountname.Checked = $true
	}
	Else
	{
		$checkboxsamaccountname.Checked = $false
	}
	#Street
	$ADStreet = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADStreet -ErrorAction SilentlyContinue).ADStreet
	If ($ADStreet -eq 1)
	{
		$checkboxstreet.Checked = $true
	}
	Else
	{
		$checkboxstreet.Checked = $false
	}
	#City
	$ADCity = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity
	If ($ADCity -eq 1)
	{
		$checkboxcity.Checked = $true
	}
	Else
	{
		$checkboxcity.Checked = $false
	}
	#State
	$ADState = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState
	If ($ADState -eq 1)
	{
		$checkboxstate.Checked = $true
	}
	Else
	{
		$checkboxstate.Checked = $false
	}
	#JobTitle
	$ADJobTitle = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADJobTitle -ErrorAction SilentlyContinue).ADJobTitle
	If ($ADJobTitle -eq 1)
	{
		$checkboxjobtitle.Checked = $true
	}
	Else
	{
		$checkboxjobtitle.Checked = $false
	}
	#Department
	$ADDepartment = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment
	If ($ADDepartment -eq 1)
	{
		$checkboxdepartment.Checked = $true
	}
	Else
	{
		$checkboxdepartment.Checked = $false
	}
	#Company
	$ADCompany = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany
	If ($ADCompany -eq 1)
	{
		$checkboxcompany.Checked = $true
	}
	Else
	{
		$checkboxcompany.Checked = $false
	}
	
	#O365
	#O365FirstName
	$O365FirstName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365FirstName -ErrorAction SilentlyContinue).O365FirstName
	If ($O365FirstName -eq 1)
	{
		$checkboxO365FirstName.Checked = $true
	}
	Else
	{
		$checkboxO365FirstName.Checked = $false
	}
	#O365LastName
	$O365LastName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365LastName -ErrorAction SilentlyContinue).O365LastName
	If ($O365LastName -eq 1)
	{
		$checkboxO365LastName.Checked = $true
	}
	Else
	{
		$checkboxO365LastName.Checked = $false
	}
	#O365DisplayName
	$O365DisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365DisplayName -ErrorAction SilentlyContinue).O365DisplayName
	If ($O365DisplayName -eq 1)
	{
		$checkboxO365DisplayName.Checked = $true
	}
	Else
	{
		$checkboxO365DisplayName.Checked = $false
	}
	#O365UPN
	$O365UPN = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365UPN -ErrorAction SilentlyContinue).O365UPN
	If ($O365UPN -eq 1)
	{
		$checkboxO365UPN.Checked = $true
	}
	Else
	{
		$checkboxO365UPN.Checked = $false
	}
	#O365Street
	$O365Street = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365Street -ErrorAction SilentlyContinue).O365Street
	If ($O365Street -eq 1)
	{
		$checkboxO365Street.Checked = $true
	}
	Else
	{
		$checkboxO365Street.Checked = $false
	}
	#O365City
	$O365City = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City
	If ($O365City -eq 1)
	{
		$checkboxO365City.Checked = $true
	}
	Else
	{
		$checkboxO365City.Checked = $false
	}
	#O365State
	$O365State = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State
	If ($O365State -eq 1)
	{
		$checkboxO365State.Checked = $true
	}
	Else
	{
		$checkboxO365State.Checked = $false
	}
	
	
	
	#Reset Form
	$ResetForm = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ResetForm -ErrorAction SilentlyContinue).ResetForm
	If ($ResetForm -eq 1)
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $true
	}
	Else
	{
		$checkboxResetAfterUserCreationEnabled.Checked = $false
	}
	
	
	#UserFormatDisplayName
	$UserFormatDisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatDisplayName -ErrorAction SilentlyContinue).UserFormatDisplayName
	$textboxUserFormatDisplayName.Text = $UserFormatDisplayName
	
	#UserFormatO365DisplayName
	$UserFormatO365DisplayName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365DisplayName -ErrorAction SilentlyContinue).UserFormatO365DisplayName
	$textboxO365DisplayNameFormat.Text = $UserFormatO365DisplayName
	
	#UserFormatO365Email
	$UserFormatO365Email = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365Email -ErrorAction SilentlyContinue).UserFormatO365Email
	$textboxO365FormatEmail.Text = $UserFormatO365Email
	
	#UserFormatEmail
	$UserFormatEmail = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatEmail -ErrorAction SilentlyContinue).UserFormatEmail
	$textboxUserFormatEmail.Text = $UserFormatEmail
	
	#UserFormatSamAccountName
	$UserFormatSamAccountName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatSamAccountName -ErrorAction SilentlyContinue).UserFormatSamAccountName
	$textboxUserFormatSamAccountName.Text = $UserFormatSamAccountName
	
	#UserFormatUserPrincipalName
	$UserFormatUserPrincipalName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatUserPrincipalName -ErrorAction SilentlyContinue).UserFormatUserPrincipalName
	$textboxUserFormatUserPrincipalName.Text = $UserFormatUserPrincipalName
	
	#UserFormatUserPrincipalName
	$UserFormatO365UserPrincipalName = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name UserFormatO365UserPrincipalName -ErrorAction SilentlyContinue).UserFormatO365UserPrincipalName
	$textboxO365UPNFormat.Text = $UserFormatO365UserPrincipalName
	
	
	
	#RESET FORM SETTINGS
	
	##AD
	#Description
	$ADDescriptionReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDescription -ErrorAction SilentlyContinue).ADDescription
	If ($ADDescriptionReset -eq 1)
	{
		$checkboxResetADDesc.Checked = $true
	}
	
	#Office
	$ADOfficeReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADOffice -ErrorAction SilentlyContinue).ADOffice
	If ($ADOfficeReset -eq 1)
	{
		$checkboxResetADOffice.Checked = $true
	}
	
	#City
	$ADCityReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCity -ErrorAction SilentlyContinue).ADCity
	If ($ADCityReset -eq 1)
	{
		$checkboxResetADCity.Checked = $true
	}
	
	#State
	$ADStateReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADState -ErrorAction SilentlyContinue).ADState
	If ($ADStateReset -eq 1)
	{
		$checkboxResetADState.Checked = $true
	}
	
	#Zip
	$ADZipReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADZip -ErrorAction SilentlyContinue).ADZip
	If ($ADZipReset -eq 1)
	{
		$checkboxResetADZip.Checked = $true
	}
	
	#Department
	$ADDepartmentReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADDepartment -ErrorAction SilentlyContinue).ADDepartment
	If ($ADDepartmentReset -eq 1)
	{
		$checkboxResetADDepartment.Checked = $true
	}
	
	#Company
	$ADCompanyReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADCompany -ErrorAction SilentlyContinue).ADCompany
	If ($ADCompanyReset -eq 1)
	{
		$checkboxResetADCompany.Checked = $true
	}
	
	#Logon Script
	$ADLogonScriptReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name ADLogonScript -ErrorAction SilentlyContinue).ADLogonScript
	If ($ADLogonScriptReset -eq 1)
	{
		$checkboxResetADLogonScript.Checked = $true
	}
	
	
	##OFFICE 365
	
	#City
	$O365CityReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365City -ErrorAction SilentlyContinue).O365City
	If ($O365CityReset -eq 1)
	{
		$checkbox1ResetO365City.Checked = $true
	}
	
	#State
	$O365StateReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365State -ErrorAction SilentlyContinue).O365State
	If ($O365StateReset -eq 1)
	{
		$checkboxResetO365State.Checked = $true
	}
	
	#Zip
	$O365ZipReset = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' | Get-ItemProperty -Name O365Zip -ErrorAction SilentlyContinue).O365Zip
	If ($O365ZipReset -eq 1)
	{
		$checkboxResetO365Zip.Checked = $true
	}
	
}

$buttonOK_Click = {
	#ADSync Server
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ADSyncServer -Value $textboxADSyncServer.text -Force | Out-Null
	
	
	$Remotevalue = $textboxRemoteFWDDomain.Text
	If (($Remotevalue -notlike "*@*") -and ($Remotevalue.Length -gt 1))
	{
		$Remotevalue = "@$($textboxRemoteFWDDomain.Text)"
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ExchangeRemoteDomain -Value $Remotevalue -Force | Out-Null
		
	}
	Else
	{
		$Remotevalue = $textboxRemoteFWDDomain.Text
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ExchangeRemoteDomain -Value $Remotevalue -Force | Out-Null
		
	}
	$RemoteFWDINGDomain = (Get-ItemProperty 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' | Get-ItemProperty -Name ExchangeRemoteDomain -ErrorAction SilentlyContinue).ExchangeRemoteDomain
	
	
	
	#ExchangeSetup
	#CountryCode
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ExchangeSetup -Value $comboboxExchangeSetup.SelectedItem -Force | Out-Null
	
	If ($radiobuttonLocal.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ExchangeWhere -Value "Local" -Force | Out-Null
	}
	ElseIf ($radiobuttonRemote.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ExchangeWhere -Value "Remote" -Force | Out-Null
	}
	Else
	{
		#Do Nothing
	}
	
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ExchangeURL -Value $textboxexchangeserverURL.Text -Force | Out-Null
	
	
	
	#ADTitleCase
	If ($checkboxADTitleCase.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADTitleCase -Value 0 -Force | Out-Null
		
	}
	#Firstname
	If (($checkboxfirstname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADFirstname -Value 0 -Force | Out-Null
		
	}
	#Initials
	If (($checkboxinitial.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADInitials -Value 0 -Force | Out-Null
		
	}
	#Lastname
	If (($checkboxlastname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADLastName -Value 0 -Force | Out-Null
		
	}
	#DisplayName
	If (($checkboxdisplayname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDisplayName -Value 0 -Force | Out-Null
		
	}
	#Description
	If (($checkboxdescription.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force | Out-Null
		
	}
	#UserPrincipalName
	If (($checkboxupn.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADUPN -Value 0 -Force | Out-Null
		
	}
	#Office
	If (($checkboxoffice.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force | Out-Null
		
	}
	#SamAccountName
	If (($checkboxsamaccountname.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADSamAccountName -Value 0 -Force | Out-Null
		
	}
	#Street
	If (($checkboxstreet.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADStreet -Value 0 -Force | Out-Null
		
	}
	#City
	If (($checkboxcity.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force | Out-Null
		
	}
	#State
	If (($checkboxstate.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADState -Value 0 -Force | Out-Null
		
	}
	#JobTitle
	If (($checkboxjobtitle.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADJobTitle -Value 0 -Force | Out-Null
		
	}
	#Department
	If (($checkboxdepartment.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force | Out-Null
		
	}
	#Company
	If (($checkboxcompany.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\AD' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force | Out-Null
		
	}
	
	#O365TitleCase
	If ($checkboxO365TitleCase.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365TitleCase -Value 0 -Force | Out-Null
		
	}
	#O365FirstName
	If (($checkboxO365FirstName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365FirstName -Value 0 -Force | Out-Null
		
	}
	#O365LastName
	If (($checkboxO365LastName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365LastName -Value 0 -Force | Out-Null
		
	}
	#O365DisplayName
	If (($checkboxO365DisplayName.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365DisplayName -Value 0 -Force | Out-Null
		
	}
	#O365UPN
	If (($checkboxO365UPN.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365UPN -Value 0 -Force | Out-Null
		
	}
	#O365Street
	If (($checkboxO365Street.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365Street -Value 0 -Force | Out-Null
		
	}
	#O365City
	If (($checkboxO365City.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365City -Value 0 -Force | Out-Null
		
	}
	#O365State
	If (($checkboxO365State.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\TitleCase\O365' -Force | Set-ItemProperty -Name O365State -Value 0 -Force | Out-Null
		
	}
	
	#Password Options
	If ($radiobuttonPronounceablePasswor.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 0 -Force | Out-Null
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name PasswordGen -Value 1 -Force | Out-Null
		
	}
	
	#Reset Form After User Creation
	If ($checkboxResetAfterUserCreationEnabled.Checked -eq $false)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 0 -Force | Out-Null
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name ResetForm -Value 1 -Force | Out-Null
		
	}
	
	#UserFormatDisplayName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value $textboxUserFormatDisplayName.Text -Force | Out-Null
	If ("" -eq $textboxUserFormatDisplayName.text)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatDisplayName -Value "%FirstName% %LastName%" -Force | Out-Null
		
	}
	#UserFormatO365DisplayName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365DisplayName -Value $textboxO365DisplayNameFormat.Text -Force | Out-Null
	
	#UserFormatEmail
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatEmail -Value $textboxUserFormatEmail.Text -Force | Out-Null
	
	#UserFormatO365Email
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365Email -Value $textboxO365FormatEmail.Text -Force | Out-Null
	
	
	#UserFormatSamAccountName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatSamAccountName -Value $textboxUserFormatSamAccountName.Text -Force | Out-Null
	
	#UserFormatUserPrincipalName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatUserPrincipalName -Value $textboxUserFormatUserPrincipalName.Text -Force | Out-Null
	
	#UserFormatO365UserPrincipalName
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name UserFormatO365UserPrincipalName -Value $textboxO365UPNFormat.Text -Force | Out-Null
	
	#CountryCode
	Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name CountryCode -Value $comboboxDefaultCountryCode.SelectedItem -Force | Out-Null
	
}



$checkboxADTitleCase_CheckedChanged = {
	if ($checkboxADTitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxSelectAll.Enabled = $false
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	Else
	{
		$checkboxSelectAll.Enabled = $true
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
	
	
}

$checkboxSelectAll_CheckedChanged={
	If (($checkboxSelectAll.CheckState -eq 'Checked') -and ($checkboxADTitleCase.CheckState -eq 'Checked'))
	{
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	Else
	{
		$groupboxgeneral.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxAccount.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxAddress.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxOrganization.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
}

$checkboxO365SelectAll_CheckedChanged={
	If (($checkboxO365SelectAll.CheckState -eq 'Checked') -and ($checkboxO365TitleCase.CheckState -eq 'Checked'))
	{
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $true
			}
		}
	}
	Else
	{
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Checked = $false
			}
		}
	}
	
}

$checkboxO365TitleCase_CheckedChanged={
	if ($checkboxO365TitleCase.CheckState -eq 'Unchecked')
	{
		$checkboxO365SelectAll.Enabled = $false
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $false
			}
		}
	}
	Else
	{
		$checkboxO365SelectAll.Enabled = $true
		$groupboxO365General.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxO365Account.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
		$groupboxO365Address.Controls | ForEach-Object{
			if ($_ -is [System.Windows.Forms.CheckBox])
			{
				$_.Enabled = $true
			}
		}
	}
	
}

#region Control Helper Functions
function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
	$ComboBox.ValueMember = $ValueMember
}

function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}
#endregion

$linklabelUserFormats_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
Show-UserFormattingHelp_PSF
	
}

$checkboxDarkMode_CheckedChanged={
	If ($checkboxDarkMode.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 1 -Force | Out-Null
		
		Set-DarkMode
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name DarkMode -Value 0 -Force | Out-Null
		
		Set-LightMode
		
	}
	
}

$checkboxEnable_CheckedChanged={
	If ($checkboxEnable.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysADCreate -Value 0 -Force | Out-Null
	}
	
}

$checkboxCheckboxAlwaysO365_CheckedChanged={
	If ($checkboxCheckboxAlwaysO365.CheckState -eq 'Checked')
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 1 -Force | Out-Null
		
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name AlwaysO365Create -Value 0 -Force | Out-Null
	
	}
	
}

$radiobuttonNonMFALogin_CheckedChanged={
	If ($radiobuttonNonMFALogin.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 0 -Force | Out-Null
		
	}
	
}

$radiobuttonMultiFactorLogin_CheckedChanged={
	If ($radiobuttonMultiFactorLogin.Checked -eq $true)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\' -Force | Set-ItemProperty -Name MFALogin -Value 1 -Force | Out-Null
		
	}
	
}


$checkboxResetADDesc_CheckedChanged={
	If ($checkboxResetADDesc.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDescription -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADOffice_CheckedChanged={
	If ($checkboxResetADOffice.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADOffice -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADCity_CheckedChanged={
	If ($checkboxResetADCity.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCity -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADState_CheckedChanged={
	If ($checkboxResetADState.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADState -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADZip_CheckedChanged={
	If ($checkboxResetADZip.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADZip -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADDepartment_CheckedChanged={
	If ($checkboxResetADDepartment.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADDepartment -Value 0 -Force | Out-Null
		
	}
	
	
}

$checkboxResetADCompany_CheckedChanged={
	If ($checkboxResetADCompany.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADCompany -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetADLogonScript_CheckedChanged={
	If ($checkboxResetADLogonScript.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name ADLogonScript -Value 0 -Force | Out-Null
		
	}
	
}

$checkbox1ResetO365City_CheckedChanged={
	If ($checkbox1ResetO365City.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365City -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetO365State_CheckedChanged={
	If ($checkboxResetO365State.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365State -Value 0 -Force | Out-Null
		
	}
	
}

$checkboxResetO365Zip_CheckedChanged={
	If ($checkboxResetO365Zip.Checked -eq $True)
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 1 -Force | Out-Null
	}
	Else
	{
		Get-Item 'HKCU:\Software\TheLazyAdministrator\MasterUserCreator\Reset' -Force | Set-ItemProperty -Name O365Zip -Value 0 -Force | Out-Null
		
	}
	
}

$linklabelO365UserFormats_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Show-O365UserFormattingHelp_psf
	
}


]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>